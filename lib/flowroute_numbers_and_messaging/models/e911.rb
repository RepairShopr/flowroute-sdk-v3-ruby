# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

require 'json'
require 'pp'

module FlowrouteNumbersAndMessaging
  # Message Model.
  class E911 < BaseModel
    # @return [String]
    attr_accessor :street_name

    # @return [String]
    attr_accessor :street_number

    # @return [String]
    attr_accessor :address_type

    # @return [String]
    attr_accessor :address_type_number

    # @return [String]
    attr_accessor :city

    # @return [String]
    attr_accessor :state

    # @return [String]
    attr_accessor :zip

    # @return [String]
    attr_accessor :country

    # @return [String]
    attr_accessor :first_name

    # @return [String]
    attr_accessor :last_name

    # @return [String]
    attr_accessor :label

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['street_name'] = 'street_name'
      @_hash['street_number'] = 'street_number'
      @_hash['address_type'] = 'address_type'
      @_hash['address_type_number'] = 'address_type_number'
      @_hash['city'] = 'city'
      @_hash['state'] = 'state'
      @_hash['zip'] = 'zip'
      @_hash['country'] = 'country'
      @_hash['first_name'] = 'first_name'
      @_hash['last_name'] = 'last_name'
      @_hash['label'] = 'label'
      @_hash
    end

    def initialize(street_name = nil,
                   street_number = nil,
                   address_type = 'Building',
                   address_type_number = '0',
                   city = nil,
                   state = nil,
                   zip = nil,
                   country = nil,
                   first_name = nil,
                   last_name = nil,
                   label = nil)
      @street_name = street_name
      @street_number = street_number
      @address_type = address_type
      @address_type_number = address_type_number
      @city = city
      @state = state
      @country = country
      @zip = zip
      @first_name = first_name
      @last_name = last_name
      @label = label
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      street_name = hash['data']['attributes']['street_name']
      street_number = hash['data']['attributes']['street_number']
      address_type = hash['data']['attributes']['address_type']
      address_type_number = hash['data']['attributes']['address_type_number']
      city = hash['data']['attributes']['city']
      state = hash['data']['attributes']['state']
      country = hash['data']['attributes']['country']
      zip = hash['data']['attributes']['zip']
      first_name = hash['data']['attributes']['first_name']
      last_name = hash['data']['attributes']['last_name']
      label = hash['data']['attributes']['label']

      # Create object from extracted values.
      E911.new(street_name,
        street_number,
        address_type,
        address_type_number,
        city,
        state,
        zip,
        country,
        first_name,
        last_name,
        label
      )
    end

    def to_json(*a)
      { "data" => {
          "attributes" => {
            street_name: @street_name,
            street_number: @street_number,
            address_type: @address_type,
            address_type_number: @address_type_number,
            city: @city,
            state: @state,
            country: @country,
            zip: @zip,
            first_name: @first_name,
            last_name: @last_name,
            label: @label   
          },
          "type" => "e911"
        }
      }.to_json(*a)
    end
  end
end
