# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module FlowrouteNumbersAndMessaging
  # Data61 Model.
  class Data61 < BaseModel
    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :type

    # TODO: Write general description for this method
    # @return [Attributes62]
    attr_accessor :attributes

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['type'] = 'type'
      @_hash['attributes'] = 'attributes'
      @_hash
    end

    def initialize(type = 'route',
                   attributes = nil)
      @type = type
      @attributes = attributes
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      type = hash['type'] ||= 'route'
      attributes = Attributes62.from_hash(hash['attributes']) if
        hash['attributes']

      # Create object from extracted values.
      Data61.new(type,
                 attributes)
    end
  end
end
