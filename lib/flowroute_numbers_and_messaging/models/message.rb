# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module FlowrouteNumbersAndMessaging
  # Message Model.
  class Message < BaseModel
    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :from

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :to

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :body

    # TODO: Write general description for this method
    # @return [List of String]
    attr_accessor :media_urls

    # TODO: Write general description for this method
    # @return [Boolean]
    attr_accessor :is_mms

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['from'] = 'from'
      @_hash['to'] = 'to'
      @_hash['body'] = 'body'
      @_hash['media_urls'] = 'media_urls'
      @_hash['is_mms'] = 'is_mms'
      @_hash
    end

    def initialize(from = nil,
                   to = nil,
                   body = nil,
                   media_urls = nil,
                   is_mms = nil)
      @from = from
      @to = to
      @body = body
      @media_urls = media_urls
      @is_mms = is_mms
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      from = hash['from']
      to = hash['to']
      body = hash['body']
      media_urls = hash['media_urls']
      is_mms = hash['is_mms']

      # Create object from extracted values.
      Message.new(from,
                  to,
                  body,
                  media_urls,
                  is_mms)
    end
  end
end
