# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

require 'date'
module FlowrouteNumbersAndMessaging
  # Attributes Model.
  class Attributes < BaseModel
    # TODO: Write general description for this method
    # @return [Float]
    attr_accessor :amount_display

    # TODO: Write general description for this method
    # @return [Float]
    attr_accessor :amount_nanodollars

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :body

    # TODO: Write general description for this method
    # @return [List of DeliveryReceipt]
    attr_accessor :delivery_receipts

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :direction

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :from

    # TODO: Write general description for this method
    # @return [Boolean]
    attr_accessor :is_mms

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :message_encoding

    # TODO: Write general description for this method
    # @return [MessageTypeEnum]
    attr_accessor :message_type

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :status

    # TODO: Write general description for this method
    # @return [DateTime]
    attr_accessor :timestamp

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :to

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['amount_display'] = 'amount_display'
      @_hash['amount_nanodollars'] = 'amount_nanodollars'
      @_hash['body'] = 'body'
      @_hash['delivery_receipts'] = 'delivery_receipts'
      @_hash['direction'] = 'direction'
      @_hash['from'] = 'from'
      @_hash['is_mms'] = 'is_mms'
      @_hash['message_encoding'] = 'message_encoding'
      @_hash['message_type'] = 'message_type'
      @_hash['status'] = 'status'
      @_hash['timestamp'] = 'timestamp'
      @_hash['to'] = 'to'
      @_hash
    end

    def initialize(amount_display = nil,
                   amount_nanodollars = nil,
                   body = nil,
                   delivery_receipts = nil,
                   direction = nil,
                   from = nil,
                   is_mms = nil,
                   message_encoding = nil,
                   message_type = nil,
                   status = nil,
                   timestamp = nil,
                   to = nil)
      @amount_display = amount_display
      @amount_nanodollars = amount_nanodollars
      @body = body
      @delivery_receipts = delivery_receipts
      @direction = direction
      @from = from
      @is_mms = is_mms
      @message_encoding = message_encoding
      @message_type = message_type
      @status = status
      @timestamp = timestamp
      @to = to
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      amount_display = hash['amount_display']
      amount_nanodollars = hash['amount_nanodollars']
      body = hash['body']
      # Parameter is an array, so we need to iterate through it
      delivery_receipts = nil
      unless hash['delivery_receipts'].nil?
        delivery_receipts = []
        hash['delivery_receipts'].each do |structure|
          delivery_receipts << (DeliveryReceipt.from_hash(structure) if structure)
        end
      end
      direction = hash['direction']
      from = hash['from']
      is_mms = hash['is_mms']
      message_encoding = hash['message_encoding']
      message_type = hash['message_type']
      status = hash['status']
      timestamp = DateTime.rfc3339(hash['timestamp']) if hash['timestamp']
      to = hash['to']

      # Create object from extracted values.
      Attributes.new(amount_display,
                     amount_nanodollars,
                     body,
                     delivery_receipts,
                     direction,
                     from,
                     is_mms,
                     message_encoding,
                     message_type,
                     status,
                     timestamp,
                     to)
    end
  end
end
