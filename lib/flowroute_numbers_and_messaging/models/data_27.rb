# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module FlowrouteNumbersAndMessaging
  # Data27 Model.
  class Data27 < BaseModel
    # TODO: Write general description for this method
    # @return [Attributes28]
    attr_accessor :attributes

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :id

    # TODO: Write general description for this method
    # @return [Links]
    attr_accessor :links

    # TODO: Write general description for this method
    # @return [Object]
    attr_accessor :relationships

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :type

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['attributes'] = 'attributes'
      @_hash['id'] = 'id'
      @_hash['links'] = 'links'
      @_hash['relationships'] = 'relationships'
      @_hash['type'] = 'type'
      @_hash
    end

    def initialize(attributes = nil,
                   id = nil,
                   links = nil,
                   relationships = nil,
                   type = 'number')
      @attributes = attributes
      @id = id
      @links = links
      @relationships = relationships
      @type = type
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      attributes = Attributes28.from_hash(hash['attributes']) if
        hash['attributes']
      id = hash['id']
      links = Links.from_hash(hash['links']) if hash['links']
      relationships = hash['relationships']
      type = hash['type'] ||= 'number'

      # Create object from extracted values.
      Data27.new(attributes,
                 id,
                 links,
                 relationships,
                 type)
    end
  end
end
